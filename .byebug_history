exit
continue
exit
url
root_url
directory.root_url
exit
Directory.get_directories().first.url
Directory.get_directories().first.root_url
Directory.get_directories().first
Directory.get_directories().each { |dir| puts dir.root_url }
Directory.get_directories().select { |dir| dir.root_url === root_url }
Directories.get_directories().select { |dir| dir.root_url === root_url }
Directory.get_directories
dir_list
exit
dir.get_unscraped_children
dir
exit
exif
exit
exi
parent_url
parent_ur
current_dir
next
Directory.get_directories().first.url
Directory.get_directories().length
Directory.get_directories()
next
href
next
href
parent_url
href
herf
next
parent_url
current_dir["href"]
current_dir
next
current_dir
directory.dir_links[current_index]
directory.dir_links.length
next
directory.dir_links.length
directory.dir_links
next
parent_url
href
directory.scraped
next
directory
next
directory
next
parent_url
href
exit
current_dir['href']
current_dir.attributes.value
current_dir.attributes
current_dir["url"]
current_dir.url
current_dir.ur
current_dir
exit
href
parent_url
url
directory.dir_links.length
next
directory.url
next
parent_url
href
continue
exit
directory.parent_url
directory.url
continue
directory.url
directory.ur
directory.text
directory
continue
next
directory.dir_links.length
continue
next
continue
next
directory
next
type
root_url
url
continue
exit
current_dir["href"]
current_dir.text
current_dir
current_dir[current_index]
next
current_dir
next
directory.dir_links.first
directory.dir_links.last
directory.dir_links
directory.last
directory
direcotry
exit
Directory.get_directories().select { |dir| !dir.is_root? }.last.type
Directory.get_directories().select { |dir| !dir.is_root? }.last.url
Directory.get_directories().select { |dir| !dir.is_root? }.last.name
Directory.get_directories().select { |dir| !dir.is_root? }.last.name]
Directory.get_directories().select { |dir| !dir.is_root? }.last["href"]
Directory.get_directories().select { |dir| !dir.is_root? }.last.text
Directory.get_directories().select { |dir| !dir.is_root? }.last
Directory.get_directories().select { |dir| !dir.is_root? }
Directory.get_directories().select { |dir| !dir.is_root? && !dir.scraped }
root_url
exit
puts Directory.get_directories_of_type('tv')
puts Directory.get_directories_of_type('music')
puts Directory.get_directories_of_type('movie')
puts Directory.get_directories_of_type('software')
puts Directory.get_directories_of_type('tv')
exit
puts Directory.get_directories_of_type('tv')
puts Directory.get_directories_of_type('movies')
puts Directory.get_directories_of_type('movie')
puts Directory.get_directories_of_type('mofi3')
puts Directory.get_directories_of_type('tv')
puts Directory.get_directories_of_type('music')
exit
puts Directory.get_directories_of_type('music')
puts Directory.get_directories_of_type('tv')
puts Directory.get_directories_of_type('movies')
puts Directory.get_directories_of_type('movie')
exit
@links
continue
@links
exit
@links.last.text
@links.second.text
@links.first["href"]
@links.length
@links
continue
contine
@links
exit
links.last["href"]
links.last.href
links.last.name
links.last
links = resp.xpath('//th/a') + resp.xpath('//td/a').last
links = resp.xpath('//th/a') + resp.xpath('//td/a')
links = []
links
links = resp.xpath('//th/a') + resp.xpath('//td/a')
resp.xpath('//a').first.parent
resp.xpath('//a').first
resp.xpath('//a').parent
resp.xpath('//a')
resp.xpath('//a'
links
exit
resp.xpath('//th/a')
resp.xpath('//tr').first.children.first
resp.xpath('//tr').first
resp.xpath('//tr').first.children.first
resp.xpath('//tr').first.children.first.children
resp.xpath('//tr').first.children.first.children.first.at
resp.xpath('//tr').first.children.first.children.first
resp.xpath('//tr').first.children.first.children
resp.xpath('//tr').first.children.first.text
resp.xpath('//tr').first.children.first
resp.xpath('//tr').first.children
resp.xpath('//tr').first.text
resp.xpath('//tr').first
resp.xpath('//tr').frst
resp.xpath('//tr/a')
resp.xpath('//tr')
resp.xpath('//tr/a')
resp.xpath('//tra')
resp.xpath('//tr\a')
resp.xpath('//tr/a')
resp.private_methods
resp.public_methods
resp
exit
open
url
ls
url
url 
exit
search.list_cses("movies", cx: 31)
search.list_cses("movies", cx: 1)
search.list_cses("movies")
search.list_cses
search
exit
Customsearch
exit
GoogleSearcher.search
GoogleSearcher
exit
Search
exit
Google
exit
Google.search("HEY")
exit
Google.search("OPEN DIRECTORIES WHUTTT")
exit
Google.search("OPEN DIRECTORIES WHUTTT")
exit
Google.search("OPEN DIRECTORIES WHUTTT")
exit
Google.search("OPEN DIRECTORIES WHUTTT")
exit
keys.values[0]
keys.values
keys.keys
keys.keyys
keys.key
keys.first
keys
keys.API_KEY
keys
keys = YAML.load_file('secrets.yml')
keys = YAML.load_file('secrets.yaml')
YAML.load("./secrets.yaml").methods
YAML.load("./secrets.yaml")
YAML.load
YAML
Google.search("hey")
Google.search("hey"0
Google
exit
DirCollecter
DirCollector
Dircollector
exit
DirCollecter
DirCollector
SmartDirScraper
exit
DirCollector
exit
n_response.css('a').first.parent.parent.parent.parent.name
